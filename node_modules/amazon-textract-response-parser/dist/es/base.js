export class ApiObjectWrapper {
    constructor(dict) {
        this._dict = dict;
    }
    get dict() {
        return this._dict;
    }
}
export class ApiBlockWrapper extends ApiObjectWrapper {
    get id() {
        return this._dict.Id;
    }
    get blockType() {
        return this._dict.BlockType;
    }
}
export class DocumentMetadata extends ApiObjectWrapper {
    get nPages() {
        var _a;
        return ((_a = this._dict) === null || _a === void 0 ? void 0 : _a.Pages) || 0;
    }
}
export function getIterable(collectionFetcher) {
    const getIterator = () => {
        const collection = collectionFetcher();
        let ixItem = 0;
        return {
            next: () => {
                return ixItem < collection.length
                    ? {
                        done: false,
                        value: collection[ixItem++],
                    }
                    : {
                        done: true,
                        value: undefined,
                    };
            },
        };
    };
    return {
        [Symbol.iterator]: getIterator,
    };
}
export function modalAvg(arr) {
    const freqs = {};
    for (const item of arr) {
        if (freqs[item]) {
            ++freqs[item].freq;
        }
        else {
            freqs[item] = { value: item, freq: 1 };
        }
    }
    let maxFreq = 0;
    let mode = null;
    for (const item in freqs) {
        if (freqs[item].freq > maxFreq) {
            maxFreq = freqs[item].freq;
            mode = freqs[item].value;
        }
    }
    return mode;
}
//# sourceMappingURL=base.js.map